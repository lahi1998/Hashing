using HashMachine;
using System.Diagnostics.Metrics;
using System.Linq.Expressions;
using System.Security.Authentication;
using System.Security.Cryptography;
using System.Text;
using System.Diagnostics;

string type;

Console.WriteLine("Pick a hash or HMAC");
Console.WriteLine();
Console.WriteLine("1: MD5");
Console.WriteLine("2: SHA1");
Console.WriteLine("3: SHA256");
Console.WriteLine("4: SHA384");
Console.WriteLine("5: SHA512");
Console.WriteLine("6: HMACMD5");
Console.WriteLine("7: HMACSHA1");
Console.WriteLine("8: HMACSHA256");
Console.WriteLine("9: HMACSHA384");
Console.WriteLine("0: HMACSHA512");


var input = Console.ReadKey();

switch (input.Key)
{
    case ConsoleKey.D1:
    case ConsoleKey.NumPad1:
        type = "MD5";
        break;
    case ConsoleKey.D2:
    case ConsoleKey.NumPad2:
        type = "SHA1";
        break;
    case ConsoleKey.D3:
    case ConsoleKey.NumPad3:
        type = "SHA256";
        break;
    case ConsoleKey.D4:
    case ConsoleKey.NumPad4:
        type = "SHA384";
        break;
    case ConsoleKey.D5:
    case ConsoleKey.NumPad5:
        type = "SHA512";
        break;
    case ConsoleKey.D6:
    case ConsoleKey.NumPad6:
        type = "HMACMD5";
        break;
    case ConsoleKey.D7:
    case ConsoleKey.NumPad7:
        type = "HMACSHA1";
        break;
    case ConsoleKey.D8:
    case ConsoleKey.NumPad8:
        type = "HMACSHA256";
        break;
    case ConsoleKey.D9:
    case ConsoleKey.NumPad9:
        type = "HMACSHA384";
        break;
    case ConsoleKey.D0:
    case ConsoleKey.NumPad0:
        type = "HMACSHA512";
        break;
    default:
        type = "Did not pick anything";
        break;
}


Stopwatch stopwatch = new Stopwatch();


//Gjorde det lidt crude med if else.
if (type == "HMACMD5" || type == "HMACSHA1" || type == "HMACSHA256" || type == "HMACSHA384" || type == "HMACSHA512")
{
    Console.Clear();

    var key = MacHandler.GenerateKey();

    Console.WriteLine("Picked : " + type);
    Console.WriteLine("autogenerated key : " + BitConverter.ToString(key).Replace("-", ""));
    Console.WriteLine("Write what you want to hash : ");
    string? text = Console.ReadLine();
    byte[] bytes = Encoding.ASCII.GetBytes(text);

    Console.Clear();

    if (type == "HMACMD5")
    {
        stopwatch.Start();
        byte[] retur = MacHandler.ComputeHmacmd5(Encoding.UTF8.GetBytes(text), key);
        stopwatch.Stop();
        Console.WriteLine("Plaintext : " + text);
        Console.WriteLine("Hash value ASCII: " + Encoding.ASCII.GetString(retur));
        Console.WriteLine();
        Console.WriteLine("Hash value HEX: " + BitConverter.ToString(retur).Replace("-", ""));
        Console.WriteLine("Elapsed Time is {0} ms", stopwatch.ElapsedMilliseconds);
    }
    else if(type == "HMACSHA1")
    {
        stopwatch.Start();
        byte[] retur = MacHandler.ComputeHmacsha1(Encoding.UTF8.GetBytes(text), key);
        stopwatch.Stop();
        Console.WriteLine("Plaintext : " + text);
        Console.WriteLine("Hash value ASCII: " + Encoding.ASCII.GetString(retur));
        Console.WriteLine();
        Console.WriteLine("Hash value HEX: " + BitConverter.ToString(retur).Replace("-", ""));
        Console.WriteLine("Elapsed Time is {0} ms", stopwatch.ElapsedMilliseconds);
    }
    else if (type == "HMACSHA256")
    {
        stopwatch.Start();
        byte[] retur = MacHandler.ComputeHmacsha256(Encoding.UTF8.GetBytes(text), key);
        stopwatch.Stop();
        Console.WriteLine("Plaintext : " + text);
        Console.WriteLine("Hash value ASCII: " + Encoding.ASCII.GetString(retur));
        Console.WriteLine();
        Console.WriteLine("Hash value HEX: " + BitConverter.ToString(retur).Replace("-", ""));
        Console.WriteLine("Elapsed Time is {0} ms", stopwatch.ElapsedMilliseconds);
    }
    else if(type == "HMACSHA384")
    {
        stopwatch.Start();
        byte[] retur = MacHandler.ComputeHmacsha384(Encoding.UTF8.GetBytes(text), key);
        stopwatch.Stop();
        Console.WriteLine("Plaintext : " + text);
        Console.WriteLine("Hash value ASCII: " + Encoding.ASCII.GetString(retur));
        Console.WriteLine();
        Console.WriteLine("Hash value HEX: " + BitConverter.ToString(retur).Replace("-", ""));
        Console.WriteLine("Elapsed Time is {0} ms", stopwatch.ElapsedMilliseconds);
    }
    else if (type == "HMACSHA512")
    {
        stopwatch.Start();
        byte[] retur = MacHandler.ComputeHmacsha512(Encoding.UTF8.GetBytes(text), key);
        stopwatch.Stop();
        Console.WriteLine("Plaintext : " + text);
        Console.WriteLine("Hash value ASCII: " + Encoding.ASCII.GetString(retur));
        Console.WriteLine();
        Console.WriteLine("Hash value HEX: " + BitConverter.ToString(retur).Replace("-", ""));
        Console.WriteLine("Elapsed Time is {0} ms", stopwatch.ElapsedMilliseconds);
    }
    else
    {
        Console.WriteLine("Error");
    }

}
else
{
    Console.Clear();

    Console.WriteLine("Picked : " + type);
    Console.WriteLine("Write what you want to hash : ");
    string? text = Console.ReadLine();
    byte[] bytes = Encoding.ASCII.GetBytes(text);

    Console.Clear();

    Hash hash = new Hash();

    stopwatch.Start();
    byte[] retur = hash.Hasher(bytes, type);
    stopwatch.Stop();
    Console.WriteLine("Plaintext : " + text);
    // nogle gange skriver den ascii ud uden of overskrive Hash value ASCII: andre gange står det rigtigt.
    Console.WriteLine("Hash value ASCII: " + Encoding.ASCII.GetString(retur));
    Console.WriteLine();
    Console.WriteLine("Hash value HEX: " + BitConverter.ToString(retur).Replace("-", ""));
    Console.WriteLine("Elapsed Time is {0} ms", stopwatch.ElapsedMilliseconds);

}

Console.ReadKey();